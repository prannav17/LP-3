# -*- coding: utf-8 -*-
"""pract 6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MBEaIncsR26E_RKQfaYI94k5lYiWP7fp
"""

# Commented out IPython magic to ensure Python compatibility.

# %pip install pandas matplotlib scikit-learn
# %pip install --upgrade pip

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

import numpy as np
import pandas as pd

# Load the dataset from your local directory
file_path = ''

df = pd.read_csv('/content/Mall_Customers.csv')

# Check the shape and the first few rows of the dataset
print(df.shape)
print(df.head())

df["A"] = df["Annual Income (k$)"]
df["B"] = df["Spending Score (1-100)"]

X = df[["A", "B"]]
print(X.head())

plt.scatter(X["A"], X["B"], s=30, c='b')
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.title("Customer Data")
plt.show()

Kmean = KMeans(n_clusters=5)
Kmean.fit(X)

centers = Kmean.cluster_centers_
print("Cluster Centers:\n", centers)

clusters = Kmean.fit_predict(X)
df["label"] = clusters
print(df.head(100))

col = ['green', 'blue', 'black', 'yellow', 'orange']

for i in range(5):
    plt.scatter(df.A[df.label == i], df.B[df.label == i], c=col[i], label=f'Cluster {i + 1}')

plt.scatter(centers[:, 0], centers[:, 1], marker='*', s=300, c='red', label='Centroid')
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.title("K-Means Clustering")
plt.legend()
plt.show()

X1 = X.loc[:, ["A", "B"]].values
wcss = []

for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, init="k-means++")
    kmeans.fit(X1)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(12, 6))
plt.grid()
plt.plot(range(1, 11), wcss, linewidth=2, color="red", marker="8")
plt.xlabel("K Value")
plt.ylabel("WCSS")
plt.title("Elbow Method")
plt.show()

df.to_csv('clustered_customers.csv', index=False)

